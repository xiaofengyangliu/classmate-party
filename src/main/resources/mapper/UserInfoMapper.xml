<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.bigbear.classmate.party.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="site.bigbear.classmate.party.pojo.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="mobile" jdbcType="BIGINT" property="mobile" />
    <result column="qq" jdbcType="BIGINT" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="id_num" jdbcType="VARCHAR" property="idNum" />
    <result column="dorm_id" jdbcType="BIGINT" property="dormId" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, name, real_name, gender, mobile, qq, email, birthday, id_num, dorm_id, 
    create_user_id, create_time, last_update
  </sql>
  <select id="selectByExample" parameterType="site.bigbear.classmate.party.pojo.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from base_user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="site.bigbear.classmate.party.pojo.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_user_info (user_id, name, real_name, 
      gender, mobile, qq, email, 
      birthday, id_num, dorm_id, 
      create_user_id, create_time, last_update
      )
    values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=BIT}, #{mobile,jdbcType=BIGINT}, #{qq,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{idNum,jdbcType=VARCHAR}, #{dormId,jdbcType=BIGINT}, 
      #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="site.bigbear.classmate.party.pojo.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idNum != null">
        id_num,
      </if>
      <if test="dormId != null">
        dorm_id,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=BIGINT},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idNum != null">
        #{idNum,jdbcType=VARCHAR},
      </if>
      <if test="dormId != null">
        #{dormId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="site.bigbear.classmate.party.pojo.UserInfoExample" resultType="java.lang.Long">
    select count(*) from base_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="site.bigbear.classmate.party.pojo.UserInfo">
    update base_user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=BIGINT},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idNum != null">
        id_num = #{idNum,jdbcType=VARCHAR},
      </if>
      <if test="dormId != null">
        dorm_id = #{dormId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="site.bigbear.classmate.party.pojo.UserInfo">
    update base_user_info
    set user_id = #{userId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      mobile = #{mobile,jdbcType=BIGINT},
      qq = #{qq,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      id_num = #{idNum,jdbcType=VARCHAR},
      dorm_id = #{dormId,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>